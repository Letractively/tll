<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>smbiz</artifactId>
		<groupId>com.tll</groupId>
		<version>0.9.0-SNAPSHOT</version>
	</parent>

	<groupId>com.tll</groupId>
	<artifactId>smbiz-web</artifactId>
	<name>smbiz-web</name>
	<version>0.9.0-SNAPSHOT</version>
	<description>The smbiz web application module.</description>
	<packaging>war</packaging>
	
	<build>
		<filters>
			<filter>src/main/resources/config.properties</filter>
			<filter>src/main/resources/config-${stage}.properties</filter>
		</filters>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/public/**</include>
					<include>*.*</include>
					<include>**/*.gwt.xml</include>
				</includes>
				<!-- don't copy any config prop files as they are managed independently. -->
				<excludes>
					<exclude>config*.properties</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources/refdata</directory>
				<filtering>false</filtering>
				<includes>
					<include>*.*</include>
				</includes>
			</resource>
			<!-- Source files needed for GWT compile -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/client/**</include>
					<include>**/common/**</include>
				</includes>
			</resource>
		</resources>
	
		<plugins>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>gwt-shell-cp</id>
						<phase>process-resources</phase>
						<goals>
							<goal>build-classpath</goal>
						</goals>
						<configuration>
							<includeScope></includeScope>
							<includeGroupIds>
								log4j,commons-logging,org.slf4j,com.google.gwt,com.google.gwt,com.allen_sauer.gwt.log,com.tll
							</includeGroupIds>
							<excludeArtifactIds>gwt-servlet,tll-config,tll-mail</excludeArtifactIds>
							<excludeClassifiers>testassets</excludeClassifiers>
							<outputFile>target/gwt-cp.txt</outputFile>
							<regenerateFile>true</regenerateFile>
						</configuration>
					</execution>
					<!-- copies libs to the target/war dir which is needed for gwt host mode -->
					<execution>
						<id>libs-to-war</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target/war/WEB-INF/lib</outputDirectory>
							<scope>runtime</scope>
							<excludeClassifiers>testassets</excludeClassifiers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- direct unit test invocations to the testng.xml file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>false</skip>
					<suiteXmlFiles>
						<suiteXmlFile>${pom.basedir}/src/test/resources/test-server.xml</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<configuration>
					<!-- NOTE: m2eclipse will fail the build if there is no valid source arg param! -->
					<source>println 'config'</source>
				</configuration>
				<executions>
					<execution>
						<id>war-resources</id>
						<phase>compile</phase><!-- we do compile phase since the *.class files need to be present for db stubbing -->
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<classpath>
								<element>
									<groupId>commons-lang</groupId>
									<artifactId>commons-lang</artifactId>
								</element>
								<element>
									<groupId>commons-logging</groupId>
									<artifactId>commons-logging</artifactId>
								</element>
								<element>
									<groupId>commons-configuration</groupId>
									<artifactId>commons-configuration</artifactId>
								</element>
								<element>
									<groupId>com.google.code.guice</groupId>
									<artifactId>guice</artifactId>
								</element>
								<element>
									<groupId>aopalliance</groupId>
									<artifactId>aopalliance</artifactId>
								</element>
								<element>
									<groupId>com.tll</groupId>
									<artifactId>tll-config</artifactId>
									<version>0.0.1-SNAPSHOT</version>
								</element>
								<element>
									<groupId>com.tll</groupId>
									<artifactId>tll-model</artifactId>
									<version>0.0.1-SNAPSHOT</version>
								</element>
								<element>
									<groupId>com.tll</groupId>
									<artifactId>tll-dao-api</artifactId>
									<version>0.0.1-SNAPSHOT</version>
									<classifier>testassets</classifier>
								</element>
								<element>
									<groupId>com.tll</groupId>
									<artifactId>tll-dao-db4o</artifactId>
									<version>0.0.1-SNAPSHOT</version>
									<classifier>testassets</classifier>
								</element>
								<element>
									<groupId>com.tll</groupId>
									<artifactId>smbiz-model</artifactId>
									<version>${project.version}</version>
								</element>
								<element>
									<groupId>com.tll</groupId>
									<artifactId>smbiz-model</artifactId>
									<version>${project.version}</version>
									<classifier>testassets</classifier>
								</element>
								<element>
									<groupId>com.tll</groupId>
									<artifactId>smbiz-persist</artifactId>
									<version>${project.version}</version>
									<classifier>${daoImpl}</classifier>
								</element>
							</classpath>
							<scriptpath>
								<element>${project.basedir}/../../config/src/main/scripts</element>
								<element>${project.basedir}/src/main/scripts</element>
							</scriptpath>
							<source><![CDATA[com.tll.BuildTools.processWarResources(project, ant);]]></source>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>gwt-shell-copy-classes</id>
						<phase>process-classes</phase>
						<goals><goal>run</goal></goals>
						<configuration>	
							<tasks>
								<mkdir dir="target/war/WEB-INF/classes" />
								<copy todir="target/war/WEB-INF/classes" preservelastmodified="true">
									<fileset dir="target/classes">
										<exclude name="**/client/**" />
										<exclude name="**/*.java" />
										<exclude name="**/*.gwt.xml" />
									</fileset>
								</copy>
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>gwt-shell-batchfiles</id>
						<phase>process-classes</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<property name="gwt.compile.style" value="${gwtCompileStyle}" />
								<loadfile property="gcp" srcFile="target/gwt-cp.txt" />
								<property name="gwt.compile.classpath" value="${project.build.outputDirectory};${gcp}" />
								<property name="gwt.compile.modules" value="${gwtTargetModule}" />
								<property name="gwt.shell.entryModule" value="${gwtTargetModule}" />
								<property name="gwt.shell.startupUrl" value="SmbizAdmin.html" />
								<property name="gwt.shell.warDir.path" value="target/war" />
								<echo message="classpath: ${gwt.compile.classpath}" />
								<ant antfile="${basedir}/../../client/build-gwt.xml">
									<target name="build-shell-exec-file" />
									<target name="build-shell-debug-exec-file" />
								</ant>
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>gwt-compile</id>
						<phase>prepare-package</phase>
						<goals><goal>run</goal></goals>
						<configuration>
							<tasks>
								<property name="gwt.compile.style" value="${gwtCompileStyle}" />
								<loadfile property="gcp" srcFile="target/gwt-cp.txt" />
								<property name="gwt.compile.classpath" value="${project.build.outputDirectory};${gcp}" />
								<property name="gwt.compile.modules" value="${gwtTargetModule}" />
								<property name="gwt.shell.warDir.path" value="target" />
								<echo message="classpath: ${gwt.compile.classpath}" />
								<ant antfile="${basedir}/../../client/build-gwt.xml">
									<target name="compile" />
								</ant>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webXml>target/war/WEB-INF/web.xml</webXml>
				</configuration>
				<executions>
					<execution>
						<id>fill-war-dir</id>
						<goals>
							<goal>exploded</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<webappDirectory>target/war</webappDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>

		<!-- stage profiles -->
		<!-- dev profile -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<debug>true</debug>
				<stage>dev</stage>
				<gwtCompileStyle>PRETTY</gwtCompileStyle>
				<gwtTargetModule>com.tll.SmbizAdminDev</gwtTargetModule>
			</properties>
		</profile>
		<!-- prod (production) profile -->
		<profile>
			<id>prod</id>
			<properties>
				<debug>false</debug>
				<stage>prod</stage>
				<gwtCompileStyle>OBF</gwtCompileStyle>
				<gwtTargetModule>com.tll.SmbizAdmin</gwtTargetModule>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<debug>false</debug>
							<optimize>true</optimize>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>tll-server-aggregate</id>
								<goals>
									<goal>single</goal>
								</goals>
								<phase>process-classes</phase>
								<configuration>
									<finalName>tll-server</finalName>
									<outputDirectory>target</outputDirectory>
									<appendAssemblyId>false</appendAssemblyId>
									<descriptors>
										<descriptor>src/main/assembly/tll-server.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
							<execution>
								<id>prod-war</id>
								<goals>	
									<goal>single</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<finalName>smbiz</finalName>
									<outputDirectory>target</outputDirectory>
									<descriptors>
										<descriptor>src/main/assembly/prod-war.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- dao impl profiles -->
		<profile>
			<id>db4o</id>
			<properties>
				<daoImpl>db4o</daoImpl>
			</properties>
		</profile>
		<profile>
			<id>jdo</id>
			<properties>
				<daoImpl>jdo</daoImpl>
			</properties>
  		<dependencies>
  			<!-- required for resolution of JDO stuff in *enhanced* .class files tll-model testassets jar  -->
  			<dependency>
  				<groupId>javax.jdo</groupId>
  				<artifactId>jdo2-api</artifactId>
  			</dependency>
  		</dependencies>
		</profile>

		<!-- security impl profiles -->
		<profile>
			<id>security</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<securityImpl>acegi</securityImpl>
			</properties>
		</profile>
		<profile>
			<id>nosecurity</id>
			<properties>
				<securityImpl>none</securityImpl>
			</properties>
		</profile>

	</profiles>
	
	<dependencies>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.guice</groupId>
			<artifactId>guice</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
		</dependency>
		
		<!-- needed for Db4oBootstrapper -->
		<dependency>
			<groupId>db4o</groupId>
			<artifactId>db4o</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<!-- END needed for Db4oBootstrapper -->

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
				<exclusion>
					<artifactId>aopalliance</artifactId>
					<groupId>aopalliance</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<version>${gwtVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>com.allen_sauer.gwt.log</groupId>
			<artifactId>gwt-log</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-config</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-core</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-mail</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-model</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-dao-api</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-service</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-servlet</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-security</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-client-core</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-client-ui</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-client-rpc</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-client-model</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-client-marshal</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-client-persist</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-client-listing</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-client-view</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-client-modelview</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-client-field</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-client-login</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>smbiz-model</artifactId>
			<version>0.9.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>smbiz-persist</artifactId>
			<version>0.9.0-SNAPSHOT</version>
			<classifier>${daoImpl}</classifier>
		</dependency>
		<dependency><!-- needed for GWT compile -->
			<groupId>com.tll</groupId>
			<artifactId>smbiz-persist</artifactId>
			<version>0.9.0-SNAPSHOT</version>
			<classifier>sources</classifier>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-core</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<classifier>testassets</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-dao-api</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<classifier>testassets</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-dao-db4o</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<classifier>testassets</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<classifier>jdk15</classifier>
			<version>${testNGVersion}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>