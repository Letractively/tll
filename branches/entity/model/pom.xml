<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.tll</groupId>
		<artifactId>tll</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<groupId>com.tll</groupId>
	<artifactId>tll-model</artifactId>
	<name>tll-model</name>
	<version>0.0.1-SNAPSHOT</version>
	<description>IEntity and ORM related definitions.</description>
	<packaging>jar</packaging>

	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/model/key/IKey.java</include>
					<include>**/model/schema/AbstractSchemaProperty.java</include>
					<include>**/model/schema/IPropertyMetadataProvider.java</include>
					<include>**/model/schema/IPropertyNameProvider.java</include>
					<include>**/model/schema/ISchemaProperty.java</include>
					<include>**/model/schema/PropertyMetadata.java</include>
					<include>**/model/schema/PropertyType.java</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>src/test/java</directory>
				<includes>
					<include>**/model/test/AccountStatus.java</include>
					<include>**/model/test/AddressType.java</include>
					<include>**/model/test/CreditCardType.java</include>
				</includes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>test-assets.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>

	<profiles>
		<profile>
			<id>jdo</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<!--
								This tells datanucleus to NOT auto-enhance since the enhancer is on the classpath! 
								
								We do this manually as the maven datanucleus enhancer plugin 
								IS UNABLE to enhance both classes and test-classes!
								
								Also, we don't want the main tll-model jar to contain jdo enhanced classes 
								rather we specify a classifier and create a SEPARATE jar containing enhanced classes!
							-->
							<compilerArgument>-proc:none</compilerArgument>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>jdo-enhance-classpath</id>
								<phase>process-resources</phase>
								<goals>
									<goal>build-classpath</goal>
								</goals>
								<configuration>
									<includeArtifactIds>log4j,asm,commons-logging,gwt-servlet,tll-core,jdo2-api,datanucleus-core,datanucleus-enhancer</includeArtifactIds>
									<outputFile>target/jdo-enhance-cp.txt</outputFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>jdo-enhance</id>
								<phase>process-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<loadfile property="ecp" srcFile="target/jdo-enhance-cp.txt" />
										<property name="enhancer.classpath" value="target/classes;${ecp}" />
										<echo message="enhancer.classpath: ${enhancer.classpath}" />
										<property name="jdo.files" value="META-INF/package.jdo" />
										<property name="jdo.target-dir-name" value="target/jdoenhanced" />
										<ant antfile="build-jdo.xml">
											<target name="enhance" />
										</ant>
									</tasks>
								</configuration>
							</execution>
							<execution>
								<id>jdo-enhance-test</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<loadfile property="ecp" srcFile="target/jdo-enhance-cp.txt" />
										<property name="enhancer.classpath" value="target/test-classes;target/classes;${ecp}" />
										<property name="jdo.files" value="META-INF/package.jdo" />
										<ant antfile="build-jdo.xml">
											<target name="enhance" />
										</ant>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-jar-plugin</artifactId>
        		<executions>
        			<execution>
        				<id>jdo-enhance-jar</id>
        				<goals>
        					<goal>jar</goal>
        				</goals>
        				<phase>package</phase>
        				<configuration>
        					<classifier>jdo</classifier>
        				</configuration>
        			</execution>
        		</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>javax.jdo</groupId>
					<artifactId>jdo2-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.datanucleus</groupId>
					<artifactId>datanucleus-core</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.datanucleus</groupId>
					<artifactId>datanucleus-enhancer</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>oro</groupId>
			<artifactId>oro</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.code.guice</groupId>
			<artifactId>guice</artifactId>
		</dependency>
		<!-- for guice 2.0 -->
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<dependency>
			<groupId>com.tll</groupId>
			<artifactId>tll-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testNGVersion}</version>
			<classifier>jdk15</classifier>
			<scope>test</scope>
		</dependency>

	</dependencies>

</project>