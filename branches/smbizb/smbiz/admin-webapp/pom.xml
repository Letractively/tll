<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>smbiz</artifactId>
    <groupId>com.tll</groupId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <groupId>com.tll</groupId>
  <artifactId>smbiz-admin-webapp</artifactId>
  <name>smbiz-admin-webapp</name>
  <version>0.0.1-SNAPSHOT</version>
  <description>The smbiz administration console.</description>

  <build>
    <finalName>smbiz</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>com/tll/**</include>
          <include>*.*</include>
        </includes>
        <!-- don't copy any config-*.properties files. This is done programmatically. -->
        <excludes>
          <exclude>config*.properties</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources/refdata</directory>
        <filtering>false</filtering>
        <includes>
          <include>*.*</include>
        </includes>
      </resource>
      <!-- Source files needed for GWT compile -->
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/client/**</include>
          <include>**/common/**</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <!-- 
            Identify all transitive deps minus those needed for smbiz-persist. 
          -->
          <execution>
            <id>deps</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>directory-single</goal>
            </goals>
            <configuration>
              <finalName>server-libs</finalName>
              <outputDirectory>target</outputDirectory>
              <appendAssemblyId>false</appendAssemblyId>
              <archiveBaseDirectory>false</archiveBaseDirectory>
              <descriptors>
                <descriptor>src/main/assembly/server-libs.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.groovy.maven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysqlConnectorVersion}</version>
          </dependency>
        </dependencies>
        <configuration>
          <!-- NOTE: m2eclipse will fail the build if there is no valid source arg param! -->
          <source>println 'config'</source>
        </configuration>
        <executions>
          <execution>
            <id>build-war-dir</id>
            <phase>package</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <classpath>
                <element>
                  <groupId>commons-lang</groupId>
                  <artifactId>commons-lang</artifactId>
                </element>
                <element>
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
                </element>
                <element>
                  <groupId>commons-configuration</groupId>
                  <artifactId>commons-configuration</artifactId>
                </element>
                <element>
                  <groupId>com.tll</groupId>
                  <artifactId>tll-config</artifactId>
                  <version>${project.parent.version}</version>
                </element>
                <element>
                  <groupId>org.springframework</groupId>
                  <artifactId>spring-jdbc</artifactId>
                </element>
                <element>
                  <groupId>com.tll</groupId>
                  <artifactId>tll-dao-api</artifactId>
                  <version>${project.parent.version}</version>
                </element>
                <element>
                  <groupId>com.tll</groupId>
                  <artifactId>tll-dao-orm</artifactId>
                  <version>${project.parent.version}</version>
                </element>
                <element>
                  <groupId>com.tll</groupId>
                  <artifactId>tll-dao-mock</artifactId>
                  <version>${project.parent.version}</version>
                </element>
              </classpath>
              <scriptpath>
                <element>${project.basedir}/../../build-tools/src/main/scripts</element>
                <element>${project.basedir}/src/main/scripts</element>
              </scriptpath>
              <source><![CDATA[
                //com.tll.BuildTools.process(project, ant);
                println 'temp disabled'
              ]]></source>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>build-gwt-classpath</id>
            <phase>process-resources</phase>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <includeGroupIds>
                com.tll,com.google.gwt,com.google.code.gwt-incubator,com.google.code.gwt-log
              </includeGroupIds>
              <excludeArtifactIds>
                gwt-servlet,tll-config,tll-mail,tll-security,tll-servlet,tll-mock,tll-dao-orm,tll-dao-mock,smbiz-persist
              </excludeArtifactIds>
              <excludeTypes>zip</excludeTypes>
              <outputFile>target/gwt-cp.txt</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>gwt-compile</id>
            <phase>process-classes</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <property name="gwt.compile.style" value="PRETTY" />
                <loadfile property="gcp" srcFile="target/gwt-cp.txt"/>
                <property name="gwt.compile.classpath" value="./target/classes;${gcp}"/>
                <property name="gwt.compile.modules" value="com.tll.SmbizAdminApp" />
                <property name="gwt.shell.entryModule" value="com.tll.WorkingModule" />
                <property name="gwt.shell.startupUrl" value="SmbizAdmin.html" />
                <echo message="classpath: ${gwt.compile.classpath}" />
                <ant antfile="${basedir}/../../client/build-gwt.xml">
                  <target name="build-shell-exec-file" />
                  <target name="build-shell-debug-exec-file" />
                  <target name="compile" />
                </ant>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>
  
  <profiles>
  
    <!-- security mode profiles -->
    <profile>
      <id>security</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <securityMode>acegi</securityMode>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <!-- 
                Aggregate all dependent tll client-* jars 
                into a single jar containing only server-side assets. 
              -->
              <execution>
                <id>tll-server</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>tll-server</finalName>
                  <outputDirectory>target/war/WEB-INF/lib</outputDirectory>
                  <appendAssemblyId>false</appendAssemblyId>
                  <archiveBaseDirectory>false</archiveBaseDirectory>
                  <descriptors>
                    <descriptor>src/main/assembly/tll-server.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>nosecurity</id>
      <properties>
        <securityMode>none</securityMode>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <!-- 
                Aggregate all dependent tll client-* jars 
                into a single jar containing only server-side assets. 
              -->
              <execution>
                <id>tll-server</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>tll-server</finalName>
                  <outputDirectory>target/war/WEB-INF/lib</outputDirectory>
                  <appendAssemblyId>false</appendAssemblyId>
                  <archiveBaseDirectory>false</archiveBaseDirectory>
                  <descriptors>
                    <descriptor>src/main/assembly/tll-server-nosecurity.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <exclusions>
      	<exclusion>
      		<artifactId>spring-aop</artifactId>
      		<groupId>org.springframework</groupId>
      	</exclusion>
      	<exclusion>
      		<artifactId>aopalliance</artifactId>
      		<groupId>aopalliance</groupId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.code.guice</groupId>
      <artifactId>guice</artifactId>
    </dependency>

    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-refdata</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-config</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-model</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>smbiz-model</artifactId>
      <classifier>${daoMode}</classifier>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>smbiz-persist</artifactId>
      <classifier>${daoMode}</classifier>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>smbiz-persist</artifactId>
      <classifier>${daoMode}-deps</classifier>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-servlet</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-security</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-ui</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-rpc</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-model</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-listing</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-mvc</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-mvc-model</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-field</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-login</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <version>${gwtVersion}</version>
      <classifier>${platform}-libs</classifier>
      <type>zip</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <version>${gwtVersion}</version>
      <classifier>${platform}</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gwt-incubator</groupId>
      <artifactId>gwt-incubator-glasspanel</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gwt-log</groupId>
      <artifactId>gwt-log</artifactId>
      <scope>provided</scope>
    </dependency>

  </dependencies>

</project>