<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>smbiz</artifactId>
    <groupId>com.tll</groupId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <groupId>com.tll</groupId>
  <artifactId>smbiz-persist</artifactId>
  <name>smbiz-persist</name>
  <version>0.0.1-SNAPSHOT</version>
  <description>Persistence for smbiz.</description>

  <build>
    <filters>
      <filter>src/main/resources/config.properties</filter>
      <filter>src/main/resources/config-${mode}.properties</filter>
    </filters>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>*.*</include>
        </includes>
        <!-- don't copy any config prop files as they are managed independently. -->
        <excludes>
          <exclude>config*.properties</exclude>
        </excludes>
      </resource>
      <!-- turn on resource filtering (variable interpolation) for the classes/META-INF dir -->
      <resource>
        <directory>src/main/resources/META-INF</directory>
        <filtering>true</filtering>
        <includes>
          <include>*.*</include>
        </includes>
        <targetPath>META-INF</targetPath>
      </resource>
      <resource>
        <directory>src/main/resources/db</directory>
        <filtering>false</filtering>
        <includes>
          <include>*.*</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.codehaus.groovy.maven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <configuration>
          <!-- NOTE: m2eclipse will fail the build if there is no valid source arg param! -->
          <source>println 'config'</source>
        </configuration>
        <executions>
          <execution>
            <id>process-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <classpath>
                <element>
                  <groupId>commons-lang</groupId>
                  <artifactId>commons-lang</artifactId>
                </element>
                <element>
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
                </element>
                <element>
                  <groupId>commons-configuration</groupId>
                  <artifactId>commons-configuration</artifactId>
                </element>
                <element>
                  <groupId>com.tll</groupId>
                  <artifactId>tll-config</artifactId>
                  <version>${project.parent.version}</version>
                </element>
              </classpath>
              <scriptpath>
                <element>${project.basedir}/../../build-tools/src/main/scripts</element>
                <element>${project.basedir}/src/main/scripts</element>
              </scriptpath>
              <source><![CDATA[com.tll.ResourceProcessor.process(project)]]></source>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- 
        Compile Time Weave @Transactional aspects irregardless of mock/orm profile
        as we are profile agnostic and build jars for both.
        NOTE: this weaving doesn't adversly affect debugging when in mock mode.
              We are still able to do line level debugging.
      --> 
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>1.1</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <weaveDependencies>
            <weaveDependency>
              <groupId>com.tll</groupId>
              <artifactId>tll-service</artifactId>
            </weaveDependency>
          </weaveDependencies>
          <aspectLibraries>
            <aspectLibrary>
              <groupId>org.springframework</groupId>
              <artifactId>spring-aspects</artifactId>
            </aspectLibrary>
          </aspectLibraries>
        </configuration>
        <executions>
          <execution>
            <id>aspectj-weave</id>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>prep-deps</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>directory-single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/orm-deps-prep.xml</descriptor>
                <descriptor>src/main/assembly/mock-deps-prep.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>package-deps</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/orm-deps.xml</descriptor>
                <descriptor>src/main/assembly/mock-deps.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>dao-mode-jars</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/orm.xml</descriptor>
                <descriptor>src/main/assembly/mock.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>

  <dependencies>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>ejb3-persistence</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <exclusions>
      	<exclusion>
      		<artifactId>spring-context</artifactId>
      		<groupId>org.springframework</groupId>
      	</exclusion>
      	<exclusion>
      		<artifactId>spring-core</artifactId>
      		<groupId>org.springframework</groupId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <exclusions>
      	<exclusion>
      		<artifactId>spring-aop</artifactId>
      		<groupId>org.springframework</groupId>
      	</exclusion>
      	<exclusion>
      		<artifactId>spring-context</artifactId>
      		<groupId>org.springframework</groupId>
      	</exclusion>
      	<exclusion>
      		<artifactId>spring-support</artifactId>
      		<groupId>org.springframework</groupId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
    </dependency>
    <dependency>
      <groupId>com.atomikos</groupId>
      <artifactId>transactions-jta</artifactId>
      <version>${atomikos.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.guice</groupId>
      <artifactId>guice</artifactId>
    </dependency>

    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-config</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-model</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-orm</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- we don't actually reference the mock dao impl
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-mock</artifactId>
      <version>${project.version}</version>
    </dependency>
    -->
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-service</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>smbiz-model</artifactId>
      <version>${project.version}</version>
    </dependency>

  </dependencies>

</project>