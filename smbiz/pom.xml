<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>tll</artifactId>
    <groupId>com.tll</groupId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <groupId>com.tll</groupId>
  <artifactId>smbiz</artifactId>
  <name>smbiz</name>
  <version>0.9.0-SNAPSHOT</version>
  <description>smbiz admin project.</description>
  <packaging>war</packaging>

  <build>
    <finalName>smbizAdmin</finalName>
    <outputDirectory>target/war/WEB-INF/classes</outputDirectory>

    <filters>
      <filter>src/main/resources/config.properties</filter>
      <filter>src/main/resources/config-${mode}.properties</filter>
    </filters>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/public/**</include>
          <include>*.*</include>
          <include>**/*.gwt.xml</include>
        </includes>
        <!-- don't copy any config prop files as they are managed independently. -->
        <excludes>
          <exclude>config*.properties</exclude>
        </excludes>
      </resource>
      <!-- turn on resource filtering (variable interpolation) for the classes/META-INF dir -->
      <resource>
        <directory>src/main/resources/META-INF</directory>
        <filtering>true</filtering>
        <includes>
          <include>*.*</include>
        </includes>
        <targetPath>META-INF</targetPath>
      </resource>
      <resource>
        <directory>src/main/resources/db</directory>
        <filtering>false</filtering>
        <includes>
          <include>*.*</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources/refdata</directory>
        <filtering>false</filtering>
        <includes>
          <include>*.*</include>
        </includes>
      </resource>
      <!-- Source files needed for GWT compile -->
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/client/**</include>
          <include>**/common/**</include>
          <include>**/model/AdminRole.java</include>
          <include>**/model/AccountStatus.java</include>
          <include>**/model/InterfaceStatus.java</include>
          <include>**/model/AddressType.java</include>
          <include>**/model/CreditCardType.java</include>
        </includes>
      </resource>
    </resources>
    
    <plugins>

      <!-- 
        Compile Time Weave @Transactional aspects irregardless of dao impl profile
        as we are profile agnostic and build jars for both.
        ALSO NOTE: the weaving brings in tll-service *.class/*.java files into the local build classes dir!!
      -->
      <!--  
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>1.1</version>
        <configuration>
          <showWeaveInfo>true</showWeaveInfo>
          <source>1.6</source>
          <target>1.6</target>
          <weaveDependencies>
            <weaveDependency>
              <groupId>com.tll</groupId>
              <artifactId>tll-service</artifactId>
            </weaveDependency>
          </weaveDependencies>
          <aspectLibraries>
            <aspectLibrary>
              <groupId>org.springframework</groupId>
              <artifactId>spring-aspects</artifactId>
            </aspectLibrary>
          </aspectLibraries>
        </configuration>
        <executions>
          <execution>
            <id>aspectj-weave</id>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      -->
      
      <plugin>
        <groupId>org.codehaus.groovy.maven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <dependencies>
        </dependencies>
        <configuration>
          <!-- NOTE: m2eclipse will fail the build if there is no valid source arg param! -->
          <source>println 'config'</source>
        </configuration>
        <executions>
          <execution>
            <id>war-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <classpath>
                <element>
                  <groupId>commons-lang</groupId>
                  <artifactId>commons-lang</artifactId>
                </element>
                <element>
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
                </element>
                <element>
                  <groupId>commons-configuration</groupId>
                  <artifactId>commons-configuration</artifactId>
                </element>
                <element>
                  <groupId>com.tll</groupId>
                  <artifactId>tll-config</artifactId>
                  <version>${project.parent.version}</version>
                </element>
                <element>
                  <groupId>org.springframework</groupId>
                  <artifactId>spring-jdbc</artifactId>
                </element>
						    <element>
						      <groupId>com.google.code.guice</groupId>
						      <artifactId>guice</artifactId>
						    </element>
						    <element>
						      <groupId>aopalliance</groupId>
						      <artifactId>aopalliance</artifactId>
						    </element>
                <element>
                  <groupId>com.tll</groupId>
                  <artifactId>tll-dao-api</artifactId>
                  <version>${project.parent.version}</version>
                </element>
                <element>
                  <groupId>com.tll</groupId>
                  <artifactId>tll-dao-db4o</artifactId>
                  <version>${project.parent.version}</version>
                </element>
                <element><!-- needed for Db4oDbShell -->
                  <groupId>com.tll</groupId>
                  <artifactId>tll-egraph</artifactId>
                  <version>${project.parent.version}</version>
                </element>
              </classpath>
              <scriptpath>
                <element>${project.basedir}/../build-tools/src/main/scripts</element>
                <element>${project.basedir}/src/main/scripts</element>
              </scriptpath>
              <source><![CDATA[
                def b = new com.tll.BuildTools(project, ant);
                b.saveConfig();
                b.generateGwtConstantsFile();
                b.generateWebXml();
                b.copyWebappResources();
                b.stubDbIfNecessary()
              ]]></source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>server-libs</id>
            <goals>
              <goal>directory-single</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <finalName>server-libs</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <outputDirectory>target</outputDirectory>
              <descriptors>
                <descriptor>src/main/assembly/server-libs.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <!-- TODO temp debug
          <execution>
            <id>tll-server-aggregate</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>process-classes</phase>
            <configuration>
              <finalName>tll-server</finalName>
              <outputDirectory>target/war/WEB-INF/lib</outputDirectory>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>src/main/assembly/tll-server-${daoImpl}.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          -->
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>gwt-shell-cp</id>
            <phase>process-resources</phase>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <includeScope>runtime</includeScope>
              <includeGroupIds>
                log4j,commons-logging,org.slf4j,com.tll,com.google.gwt,com.google.code.gwt-incubator,com.google.code.gwt-log
              </includeGroupIds>
              <excludeArtifactIds>
                gwt-servlet,tll-config,tll-core,tll-dao-api,tll-dao-db4o,tll-mail,tll-egraph,tll-model,tll-refdata,tll-security,tll-service,tll-servlet
              </excludeArtifactIds>
              <excludeTypes>zip</excludeTypes>
              <outputFile>target/gwt-cp.txt</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>gwt-compile</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <property name="gwt.compile.style" value="${gwtCompileStyle}" />
                <loadfile property="gcp" srcFile="target/gwt-cp.txt"/>
                <property name="gwt.compile.classpath" value="./target/war/WEB-INF/classes;${gcp}"/>
                <property name="gwt.compile.modules" value="${gwtCompileModules}" />
                <property name="gwt.shell.entryModule" value="com.tll.SmbizAdminDev" />
                <property name="gwt.shell.startupUrl" value="SmbizAdmin.html" />
                <echo message="classpath: ${gwt.compile.classpath}" />
                <ant antfile="${basedir}/../client/build-gwt.xml">
                  <target name="build-shell-exec-file" />
                  <target name="build-shell-debug-exec-file" />
                  <!-- <target name="compile" /> -->
                </ant>

                <!-- copy over the necessary non-tll server jars -->
                <copy todir="target/war/WEB-INF/lib">
                  <!-- <fileset dir="target/server-libs" excludes="client-*,tll-*" /> -->
                  <fileset dir="target/server-libs" />
                </copy>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- direct unit test invocations to the testng.xml file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <suiteXmlFiles>
            <suiteXmlFile>${pom.basedir}/src/test/resources/test-dao.xml</suiteXmlFile>
            <suiteXmlFile>${pom.basedir}/src/test/resources/test-namedqueries.xml</suiteXmlFile>
            <suiteXmlFile>${pom.basedir}/src/test/resources/test-service.xml</suiteXmlFile>
            <suiteXmlFile>${pom.basedir}/src/test/resources/test-server.xml</suiteXmlFile>
          </suiteXmlFiles>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webXml>target/war/WEB-INF/web.xml</webXml>
          <warSourceExcludes>
            .gwt-tmp/**,
            **/*.gwt.xml,
            **/*.java,
            WEB-INF/classes/**/client/**,
            WEB-INF/classes/**/common/**/*Async.class,
            WEB-INF/classes/**/public/**,
          </warSourceExcludes>
        </configuration>
      </plugin>

    </plugins>

  </build>
  
  <profiles>

    <!--
      there are two global profiles for development and production: dev and prod respectively.
      These profiles declare the following properties:
      - debug (true/false)
      - mode ("dev" or "prod") 
    -->

    <!-- dev (global) profile -->
    <profile>
      <id>dev</id>
      <properties>
        <debug>true</debug>
        <mode>dev</mode>
        <gwtCompileStyle>PRETTY</gwtCompileStyle>
        <gwtCompileModules>com.tll.SmbizAdminDev</gwtCompileModules>
      </properties>
    </profile>

    <!-- prod (global) profile -->
    <profile>
      <id>prod</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <debug>false</debug>
        <mode>prod</mode>
        <gwtCompileStyle>OBF</gwtCompileStyle>
        <gwtCompileModules>com.tll.SmbizAdmin</gwtCompileModules>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <debug>false</debug>
              <optimize>true</optimize>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!-- db type profiles -->
    <profile>
      <id>jdo</id>
      <properties>
        <daoImpl>jdo</daoImpl>
      </properties>
    </profile>
    <profile>
      <id>db4o</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <daoImpl>db4o</daoImpl>
      </properties>
    </profile>
    
    <!-- security mode (acegi/none) profiles -->
    <profile>
      <id>security</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <securityMode>acegi</securityMode>
      </properties>
    </profile>
    <profile>
      <id>nosecurity</id>
      <properties>
        <securityMode>none</securityMode>
      </properties>
    </profile>

  </profiles>

  <dependencies>
    <!-- 
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <version>${gwtVersion}</version>
      <classifier>${platform}-libs</classifier>
      <type>zip</type>
      <scope>provided</scope>
    </dependency>
    -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <version>${gwtVersion}</version>
      <classifier>${platform}</classifier>
      <!-- <scope>provided</scope> -->
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gwt-incubator</groupId>
      <artifactId>gwt-incubator</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.gwt-log</groupId>
      <artifactId>gwt-log</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>
    <dependency><!-- for some reason, this transitive dep is not included!! -->
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>spring-context</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-core</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aop</artifactId>
        </exclusion>
        <exclusion>
        	<artifactId>aopalliance</artifactId>
        	<groupId>aopalliance</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.guice</groupId>
      <artifactId>guice</artifactId>
    </dependency>

    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-common</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-core</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-config</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-mail</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-model</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-egraph</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-api</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-db4o</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-service</artifactId>
      <version>${project.parent.version}</version>
      <!-- <scope>provided</scope> --><!-- since we aspectj weave this in -->
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-servlet</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-security</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-core</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-ui</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-rpc</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-model</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-marshal</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-persist</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-listing</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-view</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-field</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>client-login</artifactId>
      <version>${project.parent.version}</version>
    </dependency>

    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-core</artifactId>
      <classifier>testassets</classifier>
      <version>${project.parent.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-api</artifactId>
      <classifier>testassets</classifier>
      <version>${project.parent.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-db4o</artifactId>
      <classifier>testassets</classifier>
      <version>${project.parent.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <classifier>jdk15</classifier>
      <version>${testNGVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>