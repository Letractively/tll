<!--
	Intended for global use by all client projects.
	
  These properties must be present to run the compile target:
		1) gwt.compile.modules
		2) gwt.compile.style
		3) gwt.compile.classpath
		
	These properties must be *ADDITIONALLY* persent to run the build shell targets:
		1) gwt.shell.startupUrl
		2) gwt.shell.entryModule
	
	http://code.google.com/docreader/#p=google-web-toolkit-doc-1-6&s=google-web-toolkit-doc-1-6&t=ReleaseNotes_1_6_UpgradeGuide
	
	E.g.:
	
  <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-antrun-plugin</artifactId>
    <executions>
      <execution>
        <id>gwt-compile</id>
        <phase>process-test-classes</phase>
        <goals>
          <goal>run</goal>
        </goals>
        <configuration>
          <tasks>
            <property name="gwt.compile.classpath" refid="maven.test.classpath" />
            <property name="gwt.compile.modules" value="com.tll.UITests" />
            <ant antfile="${basedir}/../build-gwt.xml">
              <target name="compile" />
            </ant>
          </tasks>
        </configuration>
      </execution>
    </executions>
  </plugin>
-->
<project name="gwt-build" default="build-shell-debug-exec-file" basedir=".">
	
	<path id="gwt.compile.classpath">
		<pathelement path="${gwt.compile.classpath}"/>
	</path>
	
	<!--
	Google Web Toolkit 1.7.0
	Compiler [-logLevel level] [-treeLogger] [-workDir dir] [-gen dir] 
		[-style style] [-ea] [-validateOnly] [-localWorkers count] [-war dir] [-extra dir] module[s]
	
	where
	  -logLevel      The level of logging detail: ERROR, WARN, INFO, TRACE, DEBUG, SPAM, or ALL
	  -treeLogger    Logs output in a graphical tree view
	  -workDir       The compiler work directory (must be writeable; defaults to a system temp dir)
	  -gen           The directory into which generated files will be written for review
	  -style         Script output style: OBF[USCATED], PRETTY, or DETAILED (defaults to OBF)
	  -ea            Debugging: causes the compiled output to check assert statements.
	  -validateOnly  Validate all source code, but do not compile
	  -localWorkers  Specifies the number of local workers to use when compiling permutations
	  -war           The war directory to write output files into (defaults to war)
	  -extra         The directory into which extra, non-deployed files will be written
	and
	  module[s]      Specifies the name(s) of the module(s) to compile
  -->
	<target name="compile" description="Invokes the GWT compiler.">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath refid="gwt.compile.classpath" />
			<jvmarg value="-Xms128m" />
			<jvmarg value="-Xmx768m" />
			<jvmarg value="-Xss1024k" />
			<jvmarg value="-ea" />
			<arg value="-war" />
			<arg value="target/war" />
			<arg value="-localWorkers" />
			<arg value="2" />
			<arg value="-style" />
			<arg value="${gwt.compile.style}" />
			<arg value="-logLevel" />
			<arg value="INFO" />
			<arg value="-workDir" />
			<arg value="target/gwtc" />
			<arg value="${gwt.compile.modules}" />
		</java>
	</target>
	
	<!--
	Google Web Toolkit 1.7.0
	HostedMode [-noserver] [-port port-number | "auto"] [-whitelist whitelist-string
	] [-blacklist blacklist-string] [-logLevel level] [-gen dir] [-style style] [-ea
	] [-server servletContainerLauncher] [-startupUrl url] [-war dir] [-extra dir] [
	-workDir dir] [-localWorkers count] module[s]
	
	where
	  -noserver      Prevents the embedded web server from running
	  -port          Specifies the TCP port for the embedded web server (defaults to 8888)
	  -whitelist     Allows the user to browse URLs that match the specified regexes (comma or space separated)
	  -blacklist     Prevents the user browsing URLs that match the specified regexes (comma or space separated)
	  -logLevel      The level of logging detail: ERROR, WARN, INFO, TRACE, DEBUG, SPAM, or ALL
	  -gen           The directory into which generated files will be written for review
	  -style         Script output style: OBF[USCATED], PRETTY, or DETAILED (defaults to OBF)
	  -ea            Debugging: causes the compiled output to check assert statements.
	  -server        Specifies a different embedded web server to run (must implement ServletContainerLauncher)
	  -startupUrl    Automatically launches the specified URL
	  -war           The war directory to write output files into (defaults to war)
	  -extra         The directory into which extra, non-deployed files will be written
	  -workDir       The compiler work directory (must be writeable; defaults to a system temp dir)
	  -localWorkers  Specifies the number of local workers to use when compiling permutations
	and
	  module[s]      Specifies the name(s) of the module(s) to host
  -->
	<target name="build-shell-exec-file" description="Builds a batch file to invoke the gwt shell.">
		<echo file="shell.bat" message="java -Xss1024k -Xms128m -Xmx512m -ea -cp ${gwt.compile.classpath} com.google.gwt.dev.HostedMode -war target/war -style ${gwt.compile.style} -logLevel INFO -startupUrl ${gwt.shell.startupUrl} ${gwt.shell.entryModule}" />
	</target>

	<target name="build-shell-debug-exec-file" description="Builds a batch file to invoke the gwt shell with a jvm debug hook at port 8000.">
		<echo file="debug.bat" message="java -Xss1024k -Xms128m -Xmx512m -ea -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=8000 -Djava.compiler=NONE -cp ${gwt.compile.classpath} com.google.gwt.dev.HostedMode -war target/war -style ${gwt.compile.style} -logLevel INFO -startupUrl ${gwt.shell.startupUrl} ${gwt.shell.entryModule}" />
	</target>

</project>